/**
 * Copyright (c) 2014 Gdansk University of Technology
 * Copyright (c) 2014 Pawel Rosciszewski
 * Copyright (c) 2014 Szymon Bultrowicz
 *
 * This file is part of KernelHive.
 * KernelHive is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 * 
 * KernelHive is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with KernelHive. If not, see <http://www.gnu.org/licenses/>.
 */
package pl.gda.pg.eti.kernelhive.common.clientService;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.4-b01 Generated
 * source version: 2.2
 *
 */
@WebServiceClient(name = "ClientBeanService", targetNamespace = "http://engine.kernelhive.eti.pg.gda.pl/", wsdlLocation = "http://localhost:8080/ClientBeanService/ClientBean?wsdl")
public class ClientBeanService
		extends Service {

	private final static URL CLIENTBEANSERVICE_WSDL_LOCATION;
	private final static WebServiceException CLIENTBEANSERVICE_EXCEPTION;
	private final static QName CLIENTBEANSERVICE_QNAME = new QName("http://engine.kernelhive.eti.pg.gda.pl/", "ClientBeanService");

	static {
		URL url = null;
		WebServiceException e = null;
		try {
			url = new URL("http://localhost:8080/ClientBeanService/ClientBean?wsdl");
		} catch (MalformedURLException ex) {
			e = new WebServiceException(ex);
		}
		CLIENTBEANSERVICE_WSDL_LOCATION = url;
		CLIENTBEANSERVICE_EXCEPTION = e;
	}

	public ClientBeanService() {
		super(__getWsdlLocation(), CLIENTBEANSERVICE_QNAME);
	}

	public ClientBeanService(WebServiceFeature... features) {
		super(__getWsdlLocation(), CLIENTBEANSERVICE_QNAME, features);
	}

	public ClientBeanService(URL wsdlLocation) {
		super(wsdlLocation, CLIENTBEANSERVICE_QNAME);
	}

	public ClientBeanService(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, CLIENTBEANSERVICE_QNAME, features);
	}

	public ClientBeanService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public ClientBeanService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 *
	 * @return returns ClientBean
	 */
	@WebEndpoint(name = "ClientBeanPort")
	public ClientBean getClientBeanPort() {
		return super.getPort(new QName("http://engine.kernelhive.eti.pg.gda.pl/", "ClientBeanPort"), ClientBean.class);
	}

	/**
	 *
	 * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
	 * configure on the proxy. Supported features not in *
	 * the <code>features</code> parameter will have their default values.
	 * @return returns ClientBean
	 */
	@WebEndpoint(name = "ClientBeanPort")
	public ClientBean getClientBeanPort(WebServiceFeature... features) {
		return super.getPort(new QName("http://engine.kernelhive.eti.pg.gda.pl/", "ClientBeanPort"), ClientBean.class, features);
	}

	private static URL __getWsdlLocation() {
		if (CLIENTBEANSERVICE_EXCEPTION != null) {
			throw CLIENTBEANSERVICE_EXCEPTION;
		}
		return CLIENTBEANSERVICE_WSDL_LOCATION;
	}
}
